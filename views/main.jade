!!!

//(manifest="/cache.manifest")
html(manifest="/cache.manifest")

    head

        title Basketball

        meta(name="apple-mobile-web-app-capable",content="yes")

        script(type="text/javascript").
            //workspace do basketball
            var basketball = {
                env_production: #{env.production},
                env_development: #{env.development},
                env_local: #{env.local},
                url: "#{env.url}"
            };

        link(rel="apple-touch-icon",href="images/icon.png")

        link(rel="apple-touch-startup-image",href="images/splash.png")


        //Styles
        link(rel='stylesheet', type="text/css", href='/stylesheets/basketball.css')
        link(rel='stylesheet', type="text/css", href='/stylesheets/jquery-ui.css')

        //script(src="/scripts/vendor/stacktrace.js")
        script(src="/online.js")
        script(src="/socket.io/socket.io.js")

        //- faz load do require.js
        script(src="/scripts/vendor/require.js")


        script(type="text/javascript").
            // Check if a new cache is available on page load.
            window.addEventListener('load', function(e) {

                var appCache = window.applicationCache;

                // Checking for an update. Always the first event fired in the sequence.
                appCache.addEventListener('checking', function(e){
                    $('#status').html('Buscando Atualizações...');
                }, false);

                // Fired after the first download of the manifest.
                appCache.addEventListener('noupdate', function(){
                    $('#status').html('Aplicativo já está na última versão!');
                    $('#status').delay(5000).fadeOut();
                }, false);

                // Fired for each resource listed in the manifest as it is being fetched.
                appCache.addEventListener('progress', function(e){
                    $('#status').html('<b>Baixando Atualização</b>: ' + e.loaded + ' de ' + e.total);
                }, false);


                appCache.addEventListener('updateready', function(e) {
                    if (appCache.status == appCache.UPDATEREADY) {
                        // Browser downloaded a new app cache.
                        // Swap it in and reload the page to get the new hotness.
                        appCache.swapCache();
                        if (confirm('Uma nova versão do site está disponível. Deseja carregá-la?')) {
                            window.location.reload();
                        }
                    }
                }, false);

            }, false);



        script(type="text/javascript").

            require.config({
                baseUrl: "/scripts",
                paths: {
                    //scripts
                    "jquery": "/scripts/vendor/jquery",
                    "jquery-ui": "/scripts/vendor/jquery-ui",
                    "jquery-ui.touch": "/scripts/vendor/jquery-ui.touch",
                    "underscore": "/scripts/vendor/underscore",
                    "backbone": "/scripts/vendor/backbone",
                    "backbone.offline": "/scripts/vendor/backbone.offline",
                    "moment": "/scripts/vendor/moment",


                    "Basketball": "/scripts/basketball/basketball",
                    "Routes": "/scripts/basketball/routes",
                    "Views": "/scripts/basketball/views",
                    "Models": "/scripts/basketball/models",
                    "Startup": "/scripts/basketball/startup",
                    "Utils": "/scripts/basketball/utils"

                },
                shim: {
                    'underscore': {
                        exports: '_'
                    },
                    'backbone': {
                        deps: ['underscore', 'jquery'],
                        exports: 'Backbone'
                    },
                    'backbone.offline': {
                        deps: ['underscore', 'backbone'],
                        exports: 'Offline'
                    },
                    'jquery-ui':{
                        deps: ['jquery']
                    },
                    'jquery-ui.touch':{
                        deps: ['jquery','jquery-ui']
                    }
                }
            });

        //- nesse bloco que as páginas definem as dependências usando require.js

        script(type="text/javascript").
            requirejs.onError = function(e){
                console.log(e);
            }
            //faz load do aplicativo Customer (para funcionar direito só pode ter o load da Store aqui)
            require(['Basketball']);

    body(style="display:none;")
        div#logged
        div#main
            div#top
            div#mid
            div#bot
        div#status